function getCategories(){
    var root = {id:'root', parent:null, children:[]};
    var books = {id:'books', parent:root, children:[]};
    var movies = {id:'movies', parent:root, children:[]};
    var fantasy = {id:'fantasy', parent:books, children:[]};
    var tolkien = {id:'tolkien', parent:fantasy, children:[]};

    root.children = [books, movies];
    books.children = [fantasy];
    fantasy.children = [tolkien];
    
    return root;
}

function getProductsAssignements(){
    return{
        B001:['movies', 'fantasy'],
        D8:['tolkien', 'root'],
        RX20:[],
    }
}

function searchPath(categorie, root, result){
    if(typeof(root) !== "undefined" && typeof(root.id) !== "undefined" && root.id == categorie){
        result = result + root.id + '\n';
        return result;
    }
    if(typeof(root) == "undefined"){
        result = 'EMPTY';
        return result;
    }
    if(typeof(root) !== "undefined" && typeof(root.id) !== "undefined" && root.id != categorie){
        result = result + root.id + ";"; 
        return searchPath(categorie, root.children[0], result);
    }   
}

function getPaths(productID){
    var root = getCategories();
    var assignments = getProductsAssignements();
    var keys = Object.keys(assignments);
    var values = Object.values(assignments);    
    
    if(productID == ''){
        return ('EMPTY');
    }
    
    var foundValues = null;
    for(var i = 0;;++i){
        if(keys[i] == productID){
            foundValues = values[i];    
            break;
        }
        if(keys[i] == undefined){
            return ('EMPTY');
            break;
        }
    } 
    
    var finalPath = new Array(String);
    var u=0;
    for(var i=0;;++i){
        var foundedValues = foundValues[i];
        for(var t=0;;++t){
            if(root.children[t] == undefined){
                break;
            }
            if(root.id == foundedValues){
                finalPath[i] = root.id;
                break;
            }
            else{
                finalPath[i] = 'EMPTY';
                result = root.id + ';';      
                var r =  searchPath(foundedValues, root.children[t], result);               
                if(r != 'EMPTY'){
                    finalPath[i] = r;
                    break;
                }
            }
        }
        if(foundValues[i] == undefined){
            break; 
        }          
    }
     
    var finalString = new Array(String);
    for(var i = 0 ;; ++i){
        if(foundValues[i] == undefined){
            break;
        }
        if(i > 0){
            var x = finalPath[i-1];
            var y = finalPath[i];
            if(x.length > y.length){
                var subX = x.substring(0, y.length) + '\n';
                if(subX.includes(y)){
                    finalString = [x];
                    finalString.sort();
                }
            }
            else{         
                var subY = y.substring(0, x.length) + '\n';
                if(subY.includes(x)){
                    finalString = [y];
                    finalString.sort();
                }
                else{
                    finalString = [x,y];
                    finalString.sort();
                }
            }
        }
    }   
    
    var orderedFinalString = new String();
    for(var i=0;;++i){
        if(finalString[i] == undefined){
            break;
        }
        
        orderedFinalString+= finalString[i] + '\n';
    }
    return orderedFinalString ;
}
